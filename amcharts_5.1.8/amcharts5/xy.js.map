{"version":3,"sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChart.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYCursor.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabel.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabelRadial.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRenderer.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisTick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Grid.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/BaseColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/LineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/XYSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/cardinal.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartScrollbar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Axis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/ValueAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/GaplessDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DurationAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisBullet.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererX.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererY.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/Candlestick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/ColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/CandlestickSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLC.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLCSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedYLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/step.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/StepLineSeries.ts","webpack://@amcharts/amcharts5/./tmp/webpack/xy.js"],"names":["chartContainer","children","push","_root","width","layout","verticalLayout","height","horizontalLayout","yAxesAndPlotContainer","maskContent","isMeasured","position","plotContainer","themeTags","icon","x","y","this","_defaultThemes","_afterNew","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","set","states","lookup","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","moveValue","fill","fillOpacity","event","_handlePlotDown","originalEvent","_handlePlotUp","_handlePlotMove","series","xAxis","get","yAxis","_removeSeries","wheelX","wheelY","_wheelDp","wheelEvent","preventDefault","plotPoint","toLocal","documentPointToRoot","clientX","clientY","wheelStep","shiftY","deltaY","shiftX","deltaX","each","axis","start","end","fixPosition","newStart","newEnd","Infinity","_handleWheelAnimation","zoom","getPrivate","delta","dispose","local","pointerId","_downPoints","length","getIndex","_downStartX","_downEndX","_downStartY","_downEndY","_downPoint","panX","panY","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","_event","undefined","_isPanning","_movePoints","_handlePinch","downPoint","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","i","downPoints","movePoints","k","point","movePoint","w","h","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","d","Math","max","sa","ea","downStartY","downEndY","cursor","snapToSeries","isHidden","isHiding","startIndex","endIndex","dataItem","dataItems","tooltipDataItem","distance","abs","hypot","tooltip","_setDataItem","component","showDataItemTooltip","handleMove","toGlobal","_prepareChildren","_colorize","isDirty","_handleSetWheel","previous","_prevSettings","_disposeProperty","_setChart","_addCursor","_pushPropertyDisposer","_handleCursorSelectEnd","parent","topAxesContainer","e","_handleScrollbar","grip","setPrivate","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","colorSet","color","next","_setSoft","behavior","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","index","insertIndex","oldValue","Error","value","newIndex","isDisposed","axisParent","removeValue","gridContainer","gridParent","topGridParent","left","right","_axis","force","indexOf","setRaw","updateGrips","show","hide","otherCharts","_otherCharts","global","chart","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","closest","closestPoint","plotT","_display","plotB","tooltips","sum","minDistance","_movePoint","maxTooltipDistance","tooltipSeries","hidden","inPlot","_tooltipToLocal","tooltipContainer","count","sort","a","b","centerY","top","bottom","min","_fy","reverse","XYChart","className","setupDefaultRules","ic","interfaceColors","language","r","rule","bind","setAll","colors","paddingLeft","paddingRight","paddingTop","paddingBottom","arrangeTooltips","pinchZoomX","pinchZoomY","saturation","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","create","strokeOpacity","inside","minGridDistance","opacity","minPosition","maxPosition","fontSize","text","populateText","centerX","visible","layer","exportable","snapToSeriesBy","strokeDasharray","minZoomCount","maxZoomCount","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","opposite","inversed","cellStartLocation","cellEndLocation","cursorOverStyle","startLocation","endLocation","fillRule","axisFill","gridIntervals","timeUnit","dateFormats","translate","periodChangeDateFormats","tooltipDateFormats","markUnitChange","strictMinMax","groupData","groupCount","groupIntervals","endValue","intervalDuration","baseInterval","Date","locale","firstDayOfWeek","utc","timezone","getTime","val","round","baseValue","logarithmic","extraMin","extraMax","step","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","strokeWidth","role","connect","autoGapCount","draw","display","sprite","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","_settings","_drawLines","setTimeout","lineX","_handleXLine","lineY","_handleYLine","_tooltipX","_updateXLine","_tooltipY","_updateYLine","syncWith","_updateChildren","_handleSyncWith","_getPoint","_toX","animate","key","to","duration","easing","_toY","_handleMove","_handleCursorDown","_handleCursorUp","native","selection","rootPoint","_inPlot","_getPosition","charAt","userPositionX","userPositionY","lastPoint","_lastPoint","skipEvent","alwaysShow","xyPos","xy","_handleCursorPosition","handleCursorShow","_updateLines","_updateSelection","handleCursorHide","_onHide","_onShow","_dispose","XYCursor","AxisLabel","AxisLabelRadial","ticks","template","grid","axisFills","labels","tick","make","labelsContainer","label","axisLength","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","_changed","pan","_thumbDownPoint","_downStart","_downEnd","downStart","downEnd","extra","_getPan","_point1","_point2","_inversed","_end","_axisLength","_start","_tooltip","markDirty","_clear","AxisRenderer","AxisTick","_beforeChanged","isPrivateDirty","Grid","listTemplate","makeColumn","_makeFieldNames","categoryAxis","valueAxis","isType","_xOpenField","_xField","_yOpenField","_yField","len","inited","_createGraphics","_ph","_pw","baseAxis","columnsTemplate","columns","clusterCount","BaseColumnSeries","stacked","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_aLocationX0","_aLocationX1","_aLocationY0","_aLocationY1","_axesDirty","_valuesDirty","_stackDirty","_sizeDirty","_toggleColumn","j","_updateGraphics","_skipped","graphics","_makeGraphics","legendDataItem","markerRectangle","stroke","axisRanges","axisRange","graphicsArray","rangeGraphics","previousDataItem","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","vcy","vcx","offset","getDataItemPositionX","getDataItemPositionY","stackToItemY","basePosition","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","l","t","fitW","fitH","maxWidth","maxHeight","ptl","getPoint","pbr","tooltipPoint","_x","_y","_handleDataSetChange","_dataItems","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","previousClose","apply","disposeDataItem","list","promises","hideDataItem","Promise","all","bullets","bullet","showDataItem","column","setting","_getTooltipTarget","strokes","fills","_fillGenerator","y0","p","x0","y1","x1","mainContainer","_strokeTemplate","_fillTemplate","legendStroke","_legendStroke","legendFill","_legendFill","curveFactory","_strokeGenerator","curve","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","dataContext","_valueFields","field","_endIndex","_clearGraphics","_startSegment","clear","segmentIndex","dataItemIndex","currentEndIndex","makeFill","fillTemplate","originalTemplate","makeStroke","strokeTemplate","xOpenFieldValue","yOpenFieldValue","baseField","basePosX","basePosY","segments","points","fillVisible","getOpen","o","_getPoints","nextItem","shouldGap","_endLine","_drawStroke","_drawFill","itemLocationX","itemLocationY","xPos","yPos","_shouldInclude","iPoint","xPos0","yPos0","closeIPoint","_points","_firstPoint","segment","context","_processAxisRange","_dataItem","marker","disabledColor","bulletFunction","LineSeries","fields","valueFields","_setRawDefault","_removeAxisRange","axisDataItem","_seriesAxisRanges","_updateFields","_valueXFields","_valueYFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","split","valueYFields","xName","xCapName","yName","yCapName","xLetter","yLetter","open","low","high","_xLowField","_xHighField","_yLowField","_yHighField","hiddenState","sequencedInterpolation","_handleMaskBullets","tooltipFieldX","tooltipFieldY","_tooltipFieldX","_tooltipFieldY","_fixVC","_dataProcessed","_stack","_unstack","getStackedXValue","_min","_max","getStackedYValue","processSeriesDataItem","_seriesValuesDirty","markDirtyExtremes","_markStakedDirtyStack","updateLegendValue","_dataGrouped","_groupSeriesData","minBulletDistance","_showBullets","_psi","_pei","_selectionProcessed","_calculateTotals","processYSelectionDataItem","processXSelectionDataItem","markDirtySelectionExtremes","_mainContainerMask","mask","_markDirtyKey","_makeRangeMask","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","uid","stackToItemKey","s","stackToSeries","stackToItem","stackValue","getStackedXValueWorking","getStackedYValueWorking","stackedToSeries","updateLegendMarker","_afterDataChange","_aggregatesCalculated","_clearDirty","_shouldShowBullet","_positionX","_positionY","id","_dataSets","_markDataSetDirty","_dataSetId","then","_isShowing","_sequencedShowHide","_isHiding","waitForStop","stackedSeries","_markDirtyStack","_afterChanged","_markDirtyAxes","hideTooltip","markDirtyText","txt","_emptyDataItem","valueLabel","positionToCoordinate","_position","resetExtremes","XYSeries","that","_context","bezierCurveTo","_x1","_k","_x2","_x0","_y1","_y2","_y0","Cardinal","prototype","areaStart","_line","areaEnd","NaN","lineStart","_point","lineEnd","closePath","custom","cardinal","interactive","interactiveChildren","Graphics","_addOrientationClass","orientation","startGrip","endGrip","remove","_updateThumb","overlay","Scrollbar","XYChartScrollbar","Container","List","background","Rectangle","axisHeader","renderer","processAxis","ghostLabel","makeLabel","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","_handleAxisSelection","playing","_series","_createAssets","_rangesDirty","_prepareDataItem","above","_index","_updateCursor","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","updateTooltipBounds","_updateBounds","_updateTooltipBounds","axisHeadersContainer","onPrivate","markDirtySize","_toggleDataItem","tags","makeGrid","makeTick","makeAxisFill","_processBullet","axisBullet","_updateChartLayout","_updatePositions","bounds","localBounds","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","roundAxisPosition","_updateTooltipText","positionTooltip","_location","_fields","coordinate","_nextItem","_autoGapCount","_fieldName","Component","Axis","_itemMap","_handleRangeChange","_prepareAxisItems","_updateAxisRanges","startCategory","endCategory","CategoryAxis","openKey","otherAxis","startDataItem","endDataItem","maxCount","Number","MAX_SAFE_INTEGER","frequency","ceil","floor","_frequency","f","_updateGhost","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","fillEndPosition","endPosition","updateGrid","updateTick","updateFill","updateBullet","cellLocation","_axisLocation","category","axisPositionToIndex","fieldName","seriesDataItem","zoomToIndexes","classNames","concat","startTime","endTime","realDuration","baseDuration","gridInterval","nextGridUnit","format","formats","previousValue","previousIndex","previousUnitValue","selectedItems","changed","skip","date","unitValue","added","pop","shouldAdd","item","dateFormatter","CategoryDateAxis","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","_getMinMax","_getSelectionMinMax","_groupData","_baseValue","numberFormat","formatter","getNumberFormatter","selectionMin","selectionMax","processDataItem","_formatText","log","LOG10E","pow","stepPower","decCount","valueToPosition","hasTag","removeTag","positionToValue","gridCount","minMaxStep","_adjustMinMax","stepDecimalPlaces","E","treatZeroAs","_cellLocation","axisLocation","fixSmallStep","total","minDefined","maxDefined","seriesMin","seriesMax","isShowing","range","_minReal","_maxReal","_deltaMinMax","minMaxStep2","_syncAxes","valueToFinalPosition","minDiff","diff","minAdapted","adapters","fold","maxAdapted","_fixMin","_fixMax","exponent","power","strict","animatePrivate","strictMode","initialMin","initialMax","difference","stepDivisor","maxPrecision","ceiledStep","MAX_VALUE","minCount","extraDecimals","decimals","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","c","omin","omax","ostep","_checkSync","ValueAxis","_setBaseInterval","interval","_baseDuration","baseMainDuration","_fixZoomFactor","groupInterval","setDataSet","_mainDataItems","mainDataSetId","newDataItem","previousTime","dataSetId","groupFieldValues","workingFields","firstDate","time","roundedTime","_makeDataItem","groupKey","currentValue","average","_groupingCalculated","modifiedDifference","current","_strictMode","_intervalDuration","intervals","_date","close","_updateDates","openValue","closeValue","result","diValue","first","second","value1","zoomToValues","DateAxis","dates","_dates","found","itemValue","findex","_updateAllDates","valueToIndex","previousPosition","minDifference","realValue","GaplessDateAxis","durationFormatter","getDurationFormatter","divisors","realDivisor","divisor","reducedCount","getFormat","DurationAxis","Entity","AxisBullet","gridTemplate","axisChildren","point1","point2","_ls","_lc","innerWidth","toggleVisibility","fillDrawMethod","_positionTooltip","num","pointerOrientation","oldBounds","AxisRendererX","innerHeight","AxisRendererY","_draw","RoundedRectangle","Candlestick","Template","ColumnSeries","lx0","lx1","ly0","ly1","hx0","hx1","hy0","hy1","getRaw","_updateCandleGraphics","CandlestickSeries","lY","hX","OHLC","OHLCSeries","_setDefault","SmoothedYLineSeries","SmoothedXLineSeries","SmoothedXYLineSeries","Step","_t","stepAfter","itemLocationX0","itemLocationY0","itemLocationX1","itemLocationY1","xPos1","yPos1","iPoint0","point0","iPoint1","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","closeIPoint0","closeIPoint1","StepLineSeries","am5xy"],"mappings":"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","file":"xy.js","sourcesContent":["import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * Indicates maximum distance from pointer (moust or touch) to points\n\t * tooltips need to be shown for.\n\t *\n\t * Points that are further from pointer than this setting will not be shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart horizontally.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomX?: boolean;\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart vertically.\n\t * \n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomY?: boolean;\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n\t/**\n\t * @ignore\n\t */\n\totherCharts?: Array<XYChart>\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t *\n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] used for any elements that need to be displayed over\n\t * regular `plotContainer`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topPlotContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false, position: \"absolute\" }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.plotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\n\tprotected _downStartX?: number;\n\tprotected _downEndX?: number;\n\n\tprotected _downStartY?: number;\n\tprotected _downEndY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.set(\"opacity\", 0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\tplotContainer.children.moveValue(zoomOutButton);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"xy\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event.originalEvent);\n\t\t}));\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t}\n\t\tsuper._removeSeries(series);\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\n\t\t\t\twheelEvent.preventDefault();\n\n\t\t\t\tconst plotPoint = plotContainer.toLocal(this._root.documentPointToRoot({ x: wheelEvent.clientX, y: wheelEvent.clientY }))\n\t\t\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\t\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\t\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\t\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\n\t\t\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\n\t\t\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\t\t\t\t\t\t\tlet delta = wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\t\t\t\t\t\t\tlet delta = wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\t\t\t\t\t\t\tlet delta = wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\t\t\t\t\t\t\tlet delta = wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handlePlotDown(event: IPointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\n\t\t\tconst touchEvent = event as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 0) {\n\t\t\t\t\tconst xAxis = this.xAxes.getIndex(0);\n\t\t\t\t\tconst yAxis = this.yAxes.getIndex(0);\n\n\n\t\t\t\t\tif (xAxis) {\n\t\t\t\t\t\tthis._downStartX = xAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndX = xAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yAxis) {\n\t\t\t\t\t\tthis._downStartY = yAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndY = yAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\tthis._downPoint = local;\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(_event: IPointerEvent) {\n\n\t\tif (this._downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: IPointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst touchEvent = event as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\n\t\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(plotContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst w = plotContainer.width();\n\t\t\tconst h = plotContainer.height();\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tmovePoint0 = plotContainer.toLocal(movePoint0)\n\t\t\t\tmovePoint1 = plotContainer.toLocal(movePoint1)\n\n\t\t\t\tdownPoint0 = plotContainer.toLocal(downPoint0)\n\t\t\t\tdownPoint1 = plotContainer.toLocal(downPoint1)\n\n\t\t\t\tif (this.get(\"pinchZoomX\")) {\n\t\t\t\t\tconst downStartX = this._downStartX;\n\t\t\t\t\tconst downEndX = this._downEndX;\n\n\t\t\t\t\tif (downStartX != null && downEndX != null) {\n\n\t\t\t\t\t\tif (downPoint0.x > downPoint1.x) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartX * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndX * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.xAxes.each((xAxis) => {\n\t\t\t\t\t\t\tlet sa = xAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = xAxis.fixPosition(e);\n\n\t\t\t\t\t\t\txAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.get(\"pinchZoomY\")) {\n\t\t\t\t\tconst downStartY = this._downStartY;\n\t\t\t\t\tconst downEndY = this._downEndY;\n\n\t\t\t\t\tif (downStartY != null && downEndY != null) {\n\n\t\t\t\t\t\tif (downPoint0.y < downPoint1.y) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartY * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndY * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.yAxes.each((yAxis) => {\n\n\t\t\t\t\t\t\tlet sa = yAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = yAxis.fixPosition(e);\n\n\t\t\t\t\t\t\tyAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal(point), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.handleMove();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = cursor.getPrivate(\"positionX\", 0.5);\n\t\tconst positionY = cursor.getPrivate(\"positionY\", 0.5);\n\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(_axis: Axis<AxisRenderer>) { };\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.1 && point.y >= -0.1 && point.x <= plotContainer.width() + 0.1 && point.y <= plotContainer.height() + 0.1) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + h, prevY + height) })\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n","import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round((value - min) / intervalDuration) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\textraMin: 0,\r\n\t\t\textraMax: 0,\r\n\t\t\tstrictMinMax: false,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", { fillOpacity: 1 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", { fillOpacity: 0 });\r\n\r\n\t}\r\n}\r\n","import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t * \n\t * Possible values: `\"xy\"` (default), `\"x\"`, and `\"y\"`.\n\t *\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor;\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500))\n\n\t\tthis.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t})\n\n\t\tthis.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t})\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 2);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 2);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tif (this.get(\"alwaysShow\")) {\n\t\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\t\tthis.handleMove();\n\t\t\t\t}\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event.originalEvent);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event.originalEvent);\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: IPointerEvent) {\n\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(_event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\t\tlet positionX = this.getPrivate(\"positionX\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\t\tpositionX = userPositionX;\n\t\t\t\t}\n\n\t\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\t\tlet positionY = this.getPrivate(\"positionY\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\t\tpositionY = userPositionY;\n\t\t\t\t}\n\n\t\t\t\tlet dispatch = false;\n\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionX - this.getPrivate(\"downPositionX\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionY - this.getPrivate(\"downPositionY\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dispatch) {\n\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: IPointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif(chart && $object.keys(chart.plotContainer._downPoints).length > 1){\n\t\t\t\tthis.set(\"forceHidden\", true)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\nthis.set(\"forceHidden\", false)\n\t\t\t}\n\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y });\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t * \n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tconst snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n","import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n","import type { Sprite } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { IPointerEvent } from \"../../../core/render/backend/Renderer\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t * \n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t * \n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tif (this.get(\"opposite\" as any)) {\n\t\t\tthemeTags.push(\"opposite\");\n\t\t}\n\t\tif (this.get(\"inside\" as any)) {\n\t\t\tthemeTags.push(\"inside\");\n\t\t}\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event.originalEvent);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: IPointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: IPointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: IPointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.setAll({ start: downStart - extra, end: downEnd + extra });\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tif (chart.inPlot(point)) {\n\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tmarkerRectangle.setAll({ fill: graphics.get(\"fill\"), stroke: graphics.get(\"stroke\") });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst graphicsArray: Array<Graphics> = dataItem.get(\"rangeGraphics\", []);\n\t\t\t\tdataItem.set(\"rangeGraphics\", graphicsArray);\n\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b < yStart) || (t > yEnd && b > yEnd)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tprotected _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tmarkerRectangle.set(setting, graphics.get(setting, this.get(setting)));\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _legendStroke?: Graphics;\n\tprotected _legendFill?: Graphics;\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t);\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tthis.strokes.template.set(\"stroke\", stroke);\n\t\t\tconst legendStroke = this._legendStroke;\n\t\t\tif (legendStroke) {\n\t\t\t\tlegendStroke.states.lookup(\"default\")!.set(\"stroke\", stroke);\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tthis.fills.template.set(\"fill\", fill);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fill\", fill);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.startIndex();\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.endIndex();\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis._clearGraphics();\n\n\t\t\t\tthis._startSegment(0, startIndex);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _clearGraphics() {\n\t\tthis.strokes.clear();\n\t\tthis.fills.clear();\n\t}\n\n\tprotected _startSegment(segmentIndex: number, dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY\n\t\t}\n\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tconst fill = this.makeFill(fills);\n\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tconst stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\n\t\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t})\n\n\t\tif (currentEndIndex < endIndex) {\n\t\t\tthis._startSegment(segmentIndex + 1, currentEndIndex);\n\t\t}\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(xPos0)) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(yPos0)) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tpoints.push(point);\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tthis._legendStroke = legendStroke;\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tthis._legendFill = legendFill;\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(marker._root, this, new DataItem(this, {}, {}));\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.set(\"tooltipText\", undefined);\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { List } from \"../../../core/util/List\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tprotected __valueXShowFields!: Array<string>;\n\tprotected __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis._settings.xAxis.series.push(this);\n\t\tthis._settings.yAxis.series.push(this);\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tif (!this.get(\"baseAxis\")) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tthis.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tif (!this.get(\"xAxis\").inited || !this.get(\"yAxis\").inited) {\n\t\t\treturn false\n\t\t}\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\t\tif (xAxis === baseAxis) {\n\t\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\t\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\t}\n\t\telse if (yAxis === baseAxis) {\n\t\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tthis.updateLegendValue(undefined);\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif ((this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty)) {\n\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", this.getPrivate(\"selectionMinY\"));\n\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", this.getPrivate(\"selectionMaxY\"));\n\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", this.getPrivate(\"selectionMinX\"));\n\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", this.getPrivate(\"selectionMaxX\"));\n\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tprotected _unstack() {\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tconst positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tconst positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tif (!bullet.getPrivate(\"hidden\")) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\n\t\t\t\tlet w = right - left;\n\t\t\t\tlet h = bottom - top;\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.set(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.set(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tlet x = left + w * locationX;\n\t\t\t\tlet y = bottom - h * locationY;\n\n\t\t\t\tsprite.set(\"x\", x);\n\t\t\t\tsprite.set(\"y\", y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tif (this.bullets.length > 0) {\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\t\tlet bullets = dataItem.bullets;\n\t\t\t\tif (bullets) {\n\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tthis.updateLegendMarker(dataItem);\n\t\tthis.updateLegendValue(dataItem);\n\n\t\tif (this.get(\"tooltip\")) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\t\t\tif (tooltip) {\n\t\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\t\tlet show = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (show) {\n\t\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tpublic _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.resetExtremes();\n\t}\n\n\n\t// todo description\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n\n}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number;\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.set(\"opacity\", 0);\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\n\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\n\t\t\tlet sAnimation = this._sAnimation;\n\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < - maxDeviation) {\n\t\t\t\tstart = -maxDeviation;\n\t\t\t}\n\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t}\n\n\t\t\tif (start > end) {\n\t\t\t\t[start, end] = [end, start];\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tif (!priority) {\n\t\t\t\tpriority = \"end\";\n\t\t\t}\n\n\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\tif (start < this.get(\"start\")) {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\tif (end > this.get(\"end\")) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet minZoomCount = this.get(\"minZoomCount\");\n\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\");\n\n\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t}\n\n\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t}\n\n\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\tif (priority === \"start\") {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add to the end\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\t//unless end is > 0\n\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//end = 1;\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// most likely we are dragging right, so we modify left\n\t\t\telse {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// remove from start\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//start = 0;\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\tif (duration > 0) {\n\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t}\n\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t}\n\n\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\tif (sAnimation) {\n\t\t\t\t\treturn sAnimation;\n\t\t\t\t}\n\t\t\t\telse if (eAnimation) {\n\t\t\t\t\treturn eAnimation;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"start\", start);\n\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t// otherwise bullets and line out of sync, as series is not redrawn\n\t\t\t\tthis._root.events.on(\"frameended\", ()=>{\n\t\t\t\t\tthis._markDirtyKey(\"start\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tthis.chart!._updateCursor();\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, false);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, true);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(\"visible\", visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>) {\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif (!dataItem.get(\"label\")) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"grid\")) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"tick\")) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = bounds.right - bounds.left;\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = bounds.right - bounds.left;\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\tghostLabel.set(\"text\", label.text._getText());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t\tghostLabel.setPrivate(\"visible\", true);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!);\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t\t}\n\t\t\t\tif (!$type.isNaN(position)) {\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\") || position > this.get(\"end\")) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\t\t\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\t\t\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"startIndex\", series.dataItems.indexOf(startDataItem));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"endIndex\", series.dataItems.indexOf(endDataItem) + 1);\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\tif (dataItem.isHidden()) {\n\t\t\t\tdataItem.show();\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\tf++;\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif(label){\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\t\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\t\tlet realDuration = (endTime - startTime);\n\t\tif(endIndex - startIndex < maxCount){\n\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\t\t}\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n//import * as $order from \"../../../core/util/Order\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis fooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Calculated current minimum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmin?: number;\n\n\t/**\n\t * Calculated current maximum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmax?: number;\n\n\t/**\n\t * A minimum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `min` is reflecting current intermediate value, whereas `minFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tminFinal?: number;\n\n\t/**\n\t * A maximum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `max` is reflecting current intermediate value, whereas `maxFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tmaxFinal?: number;\n\n\t/**\n\t * Calculated minimum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMin?: number;\n\n\t/**\n\t * Calculated maximum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMax?: number;\n\n\t/**\n\t * A target minimum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMin` is reflecting current intermediate value,\n\t * whereas `selectionMinFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMinFinal?: number;\n\n\t/**\n\t * A target maximum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMax` is reflecting current intermediate value,\n\t * whereas `selectionMaxFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMaxFinal?: number;\n\n\t/**\n\t * When selection step changes, it might change during axis zoom animation.\n\t *\n\t * `selectionStepFinal` will show what step will be when animation is\n\t * finished.\n\t * \n\t * @readonly\n\t */\n\tselectionStepFinal?: number;\n\n\t/**\n\t * Value step between grid lines.\n\t * \n\t * @readonly\n\t */\n\tstep?: number;\n\n\t/**\n\t * Decimal places used when formatting axis labels.\n\t * \n\t * @readonly\n\t */\n\tstepDecimalPlaces?: number;\n\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning) {\n\t\t\tthis._getSelectionMinMax();\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet i = 0;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = selectionMin;\n\t\t\t}\n\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tvalue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet differencePower = Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E;\n\t\t\t\t\tif (differencePower > 1) {\n\t\t\t\t\t\tvalue = Math.pow(10, Math.log(min) * Math.LOG10E + i);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\t// do not change to setPrivate, will cause SO\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tconst extraMin = this.get(\"extraMin\", 0);\n\t\tconst extraMax = this.get(\"extraMax\", 0);\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\n\t\tconst strictMinMax = this.get(\"strictMinMax\", false);\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", series.getPrivate(\"minX\"));\n\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", series.getPrivate(\"maxX\"));\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", series.getPrivate(\"minY\"));\n\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", series.getPrivate(\"maxY\"));\n\t\t\t\t\t}\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin -= (selectionMax - selectionMin) * extraMin;\n\t\t\tselectionMax += (selectionMax - selectionMin) * extraMax;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet start = this.valueToFinalPosition(selectionMin);\n\t\t\tlet end = this.valueToFinalPosition(selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\treturn;\n\t\t}\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// the number by which we need to raise 10 to get difference\n\t\t\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\t\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t\t\t// reduce this number by 10 times\n\t\t\t\tpower = power / 10;\n\n\t\t\t\tthis._deltaMinMax = power;\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\n\t\tlet strict = this.get(\"strictMinMax\");\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (this.get(\"strictMinMax\")) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tmin -= (max - min) * extraMin;\n\t\t\tmax += (max - min) * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", (max - min) / minDiff * this.get(\"maxZoomFactor\", 100));\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\tif (!logarithmic) {\n\t\t\t// round down min\n\t\t\tif (strictMode) {\n\t\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t\t// round up max\n\t\t\t\tmax = Math.ceil(max / power) * power;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t\t// round up max\n\t\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t\t}\n\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\t\t// logarithmic\n\t\telse {\n\t\t\tif (min <= 0) {\n\t\t\t\t//throw Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t\tmin = this.get(\"baseValue\", 0);\n\t\t\t}\n\n\t\t\tif (min === Infinity) {\n\t\t\t\tmin = 1;\n\t\t\t}\n\n\t\t\tif (max === -Infinity) {\n\t\t\t\tmax = 10;\n\t\t\t}\n\n\t\t\tmin = Math.pow(10, Math.floor(Math.log(Math.abs(min)) * Math.LOG10E));\n\t\t\tmax = Math.pow(10, Math.ceil(Math.log(Math.abs(max)) * Math.LOG10E));\n\n\t\t\tif (this.get(\"strictMinMax\")) {\n\t\t\t\tlet minDefined = this.get(\"min\");\n\t\t\t\tlet maxDefined = this.get(\"max\");\n\t\t\t\tif ($type.isNumber(minDefined) && minDefined > 0) {\n\t\t\t\t\tmin = minDefined;\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(maxDefined) && maxDefined > 0) {\n\t\t\t\t\tmax = maxDefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\t\tif (!logarithmic) {\n\t\t\t// final min and max\n\t\t\tlet minCount = Math.floor(min / step);\n\n\t\t\tmin = $math.round(step * minCount, decCount);\n\n\t\t\tlet maxCount: number;\n\n\t\t\tif (!strictMode) {\n\t\t\t\tmaxCount = Math.ceil(max / step);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmaxCount = Math.floor(max / step);\n\t\t\t}\n\n\t\t\tif (maxCount === minCount) {\n\t\t\t\tmaxCount++;\n\t\t\t}\n\n\t\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\t\tif (max < initialMax) {\n\t\t\t\tmax = max + step;\n\t\t\t}\n\n\t\t\tif (min > initialMin) {\n\t\t\t\tmin = min - step;\n\t\t\t}\n\t\t}\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t\t//label.set(\"text\", this.getNumberFormatter().format(value, undefined, this.getPrivate(\"stepDecimalPlaces\")));\n\t\t}\n\n\t\t// //@todo number formatter + tag\n\t\t// return $math.round(this.positionToValue(position), this.getPrivate(\"stepDecimalPlaces\")).toString();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * Time unit-specific formats to use for axis tooltip.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A value which indicates relative position within axis cell to get timestamp\n\t * for the tooltip from.\n\t *\n\t * Values are from `0` (zero) to `1` (one), meaning start and end of the cell.\n\t *\n\t * If not set, it will use cell's start tiemstamp.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipIntervalOffset?: number;\n\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\tprotected _baseDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\tthis.on(\"baseInterval\", () => {\n\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t})\n\t}\n\n\tprotected _setBaseInterval(interval: ITimeInterval) {\n\t\tthis.setPrivateRaw(\"baseInterval\", interval);\n\t\tthis._baseDuration = $time.getIntervalDuration(interval);\n\t}\n\n\tprotected _fixZoomFactor() {\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\t}\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis._fixZoomFactor();\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis._setBaseInterval(groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._setBaseInterval(baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\t\tif (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\n\t\t\t// make array of intervals which will be used;\n\t\t\tlet intervals: ITimeInterval[] = [];\n\t\t\tlet baseDuration = this.baseMainDuration();\n\n\t\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\tif (groupIntervals) { }\n\t\t\t$array.each(groupIntervals, (interval) => {\n\t\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\t\tintervals.push(interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tseries._dataSets = {};\n\n\t\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\t\tlet fields: Array<string>;\n\n\t\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueYFields;\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueXFields;\n\t\t\t}\n\n\t\t\tlet dataItems = series._mainDataItems;\n\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\tseries._dataSets[mainDataSetId] = dataItems;\n\n\t\t\t$array.eachContinue(intervals, (interval) => {\n\n\t\t\t\tlet previousTime = -Infinity;\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t\t})\n\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit);\n\n\t\t\t\tlet firstItem = dataItems[0];\n\t\t\t\tlet firstDate: Date;\n\t\t\t\tif (firstItem) {\n\t\t\t\t\tfirstDate = new Date(dataItems[0].get(key as any));\n\t\t\t\t}\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\t\tlet roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, this._root.locale.firstDayOfWeek, this._root.utc, firstDate, this._root.timezone).getTime();\n\t\t\t\t\tlet dataContext: any;\n\n\t\t\t\t\tif (previousTime < roundedTime - intervalDuration / 24) {\n\t\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\t\tnewDataItem.setRaw(key as any, roundedTime);\n\n\t\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\n\t\t\t\t\t\t\tif (value !== undefined) {\n\n\t\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\t\tdataContext[key as any] = roundedTime;\n\t\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tpreviousTime = roundedTime;\n\t\t\t\t})\n\n\t\t\t\tif (series._dataSets[dataSetId].length < this.get(\"groupCount\", Infinity)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t})\n\t\t\tif (series._dataSetId) {\n\t\t\t\tseries.setDataSet(series._dataSetId);\n\t\t\t}\n\t\t\tthis.markDirtySize();\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tconst selectionMin = this.getPrivate(\"selectionMin\");\n\t\tconst selectionMax = this.getPrivate(\"selectionMax\");\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tconst groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\t\t\tif (groupIntervals) {\n\t\t\t\t\t\tgroupInterval = $time.chooseInterval(0, modifiedDifference, this.get(\"groupCount\", Infinity), groupIntervals);\n\t\t\t\t\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\t\t\t\t\tgroupInterval = { ...baseInterval };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count))) {\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis._setBaseInterval(groupInterval)\n\n\t\t\t\t\tif (groupInterval) {\n\t\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tif (start.index > 0) {\n\t\t\t\t\t\tstart.index -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\n\t\t\t\t\tseries.setPrivate(\"startIndex\", start.index);\n\t\t\t\t\tseries.setPrivate(\"endIndex\", end.index);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")! as number;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! as number;\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\n\t\t\tvalue = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, new Date(min), this._root.timezone).getTime();\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tdataItem.setRaw(\"endValue\", $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime()) //$time.round(new Date(value + intervalDuration * 1.1), gridInterval.timeUnit, gridInterval.count).getTime());\n\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\n\n\t\t\t\tpreviousValue = value;\n\n\t\t\t\tvalue = $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime();\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\t/* goes up to the year\n\tprotected _getFormat(timeUnit: TimeUnit, value: number, previousValue: number) {\n\t\tconst formats = this.get(\"dateFormats\")!;\n\t\tlet format = formats[timeUnit];\n\n\t\tif (this.get(\"markUnitChange\")) {\n\t\t\tlet nextGridUnit = $time.getNextUnit(timeUnit);\n\n\t\t\twhile (nextGridUnit != undefined) {\n\n\t\t\t\tif (nextGridUnit) {\n\t\t\t\t\tif (timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![timeUnit];\n\t\t\t\t\t\t\ttimeUnit = nextGridUnit;\n\t\t\t\t\t\t\tnextGridUnit = $time.getNextUnit(nextGridUnit);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnextGridUnit = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextGridUnit = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn format;\n\t}\n\t*/\n\tprotected _fixMax(max: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(max), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\tprotected _updateDates(_date: number) {\n\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t * \n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn this._baseDuration;\n\t\t//return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tdataItem.open = {};\n\t\tdataItem.close = {};\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\t\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\tdataItem.close![field] = endTime;\n\n\t\t\t\tthis._updateDates(startTime);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tvalue = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, new Date(this.getPrivate(\"min\", 0)), this._root.timezone).getTime();\n\t\tlet endValue = value;\n\t\tif (location > 0) {\n\t\t\tendValue = $time.add(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\t\t}\n\t\treturn this.valueToPosition(value + (endValue - value) * location);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\n\t\tlet format = this.get(\"tooltipDateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\treturn this._root.dateFormatter.format(new Date(this.positionToValue(position) + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * this.baseDuration()), this.get(\"tooltipDateFormat\", format));\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\tvar diValue = 0;\n\t\t\tif (dataItem.open) {\n\t\t\t\tdiValue = dataItem.open[fieldName];\n\t\t\t}\n\n\t\t\treturn $order.compare(diValue, value);\n\t\t});\n\n\t\tif (series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tif (first.open && second.close) {\n\t\t\t\t\tlet open = first.open[fieldName];\n\t\t\t\t\tlet close = second.close[fieldName];\n\n\t\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\t\treturn second;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t}\n\t\telse {\n\t\t\t// @todo check if is in range\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\r\n\r\nimport { DateAxis, IDateAxisSettings, IDateAxisPrivate, IDateAxisDataItem, IDateAxisEvents } from \"./DateAxis\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport * as $array from \"../../../core/util/Array\"\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport interface IGaplessDateAxisSettings<R extends AxisRenderer> extends IDateAxisSettings<R> {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisDataItem extends IDateAxisDataItem {\r\n\t/**\r\n\t * @todo review\r\n\t */\t\r\n\tindex?: number\r\n}\r\n\r\nexport interface IGaplessDateAxisPrivate extends IDateAxisPrivate {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisEvents extends IDateAxisEvents {\r\n}\r\n\r\n/**\r\n * A version of a [[DateAxis]] which removes intervals that don't have any data\r\n * items in them.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/gapless-date-axis/} for more info\r\n * @important\r\n */\r\nexport class GaplessDateAxis<R extends AxisRenderer> extends DateAxis<R> {\r\n\tpublic static className: string = \"GaplessDateAxis\";\r\n\tpublic static classNames: Array<string> = DateAxis.classNames.concat([GaplessDateAxis.className]);\r\n\r\n\tdeclare public _settings: IGaplessDateAxisSettings<R>;\r\n\tdeclare public _privateSettings: IGaplessDateAxisPrivate;\r\n\tdeclare public _dataItemSettings: IGaplessDateAxisDataItem;\r\n\tdeclare public _events: IGaplessDateAxisEvents;\r\n\r\n\tprotected _frequency: number = 1;\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis.valueFields.push(\"date\");\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tprotected _dates: Array<number> = [];\r\n\r\n\tprotected _updateDates(date: number) {\r\n\t\tconst dates = this._dates;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, date));\r\n\t\tif (!result.found) {\r\n\t\t\t$array.insertIndex(dates, result.index, date);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateAllDates() {\r\n\t\tthis._dates.length = 0;\r\n\r\n\t\t$array.each(this.series, (series) => {\r\n\t\t\tlet field = \"valueX\";\r\n\t\t\tif (series.get(\"yAxis\") == this) {\r\n\t\t\t\tfield = \"valueY\"\r\n\t\t\t}\r\n\t\t\t$array.each(series.dataItems, (dataItem) => {\r\n\t\t\t\tlet value = dataItem.get(field as any);\r\n\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\tif (dataItem.open) {\r\n\t\t\t\t\t\tthis._updateDates(dataItem.open![field]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Convers value to a relative position on axis.\r\n\t *\r\n\t * @param   value  Value\r\n\t * @return         Relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\t\tconst len = dates.length;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet itemValue = dates[index];\r\n\r\n\t\t\tlet d = 0;\r\n\t\t\tif (itemValue > value) {\r\n\t\t\t\td = itemValue - value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = value - itemValue;\r\n\t\t\t}\r\n\r\n\t\t\treturn index / len + d / this.baseDuration() / len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value from axis scale to index.\r\n\t * \r\n\t * @param  value  Value\r\n\t * @return        Index\r\n\t */\r\n\tpublic valueToIndex(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to a corresponding numeric value from axis\r\n\t * scale.\r\n\t *\r\n\t * @param   position  Relative position\r\n\t * @return            Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\r\n\t\tlet len = this._dates.length;\r\n\t\tlet index = position * len;\r\n\t\tlet findex = Math.floor(index);\r\n\t\tif (findex < 0) {\r\n\t\t\tfindex = 0;\r\n\t\t}\r\n\r\n\t\tif (findex > len - 1) {\r\n\t\t\tfindex = len - 1\r\n\t\t}\r\n\r\n\t\treturn this._dates[findex] + (index - findex) * this.baseDuration();\r\n\t}\r\n\r\n\tprotected _fixZoomFactor() {\r\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", this._dates.length);\r\n\t}\r\n\r\n\tprotected _prepareAxisItems() {\r\n\t\tlet startTime = this.getPrivate(\"selectionMin\", 0);\r\n\t\tlet endTime = this.getPrivate(\"selectionMax\", 0);\r\n\r\n\t\tif ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n\r\n\t\t\tif (this._seriesValuesDirty) {\r\n\t\t\t\tthis._seriesValuesDirty = false;\r\n\t\t\t\tthis._updateAllDates();\r\n\t\t\t}\r\n\r\n\t\t\tconst dates = this._dates;\r\n\t\t\tconst renderer = this.get(\"renderer\");\r\n\t\t\tconst len = dates.length;\r\n\r\n\t\t\tlet startIndex = this.valueToIndex(startTime);\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tstartIndex--;\r\n\t\t\t}\r\n\r\n\t\t\tlet endIndex = this.valueToIndex(endTime);\r\n\t\t\tif (endIndex < len - 1) {\r\n\t\t\t\tendIndex++;\r\n\t\t\t}\r\n\t\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\r\n\t\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\r\n\r\n\t\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\r\n\t\t\tthis._frequency = frequency;\r\n\r\n\t\t\tfor (let j = 0, length = this.dataItems.length; j < length; j++) {\r\n\t\t\t\tthis.dataItems[j].hide();\r\n\t\t\t}\r\n\r\n\t\t\tlet realDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\r\n\r\n\t\t\t// if all items are on axis\r\n\t\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tlet intervalDuration = $time.getIntervalDuration(gridInterval);\r\n\r\n\t\t\tif (intervalDuration < this.baseDuration()) {\r\n\t\t\t\tgridInterval = { ...baseInterval };\r\n\t\t\t\tintervalDuration = $time.getIntervalDuration(gridInterval);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._intervalDuration = intervalDuration;\r\n\r\n\t\t\tconst formats = this.get(\"dateFormats\")!;\r\n\r\n\t\t\tlet selectedItems: Array<number> = [];\r\n\r\n\t\t\tlet value = $time.round(new Date(this.getPrivate(\"min\", 0)), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime() - intervalDuration;\r\n\t\t\tlet selectionMax = this.getPrivate(\"selectionMax\")\r\n\r\n\t\t\tlet previousPosition = -Infinity;\r\n\t\t\tlet minDifference = (this.get(\"end\", 1) - this.get(\"start\", 0)) / maxCount;\r\n\r\n\t\t\twhile (value <= selectionMax) {\r\n\t\t\t\tlet index = this.valueToIndex(value);\r\n\t\t\t\tlet realValue = this._dates[index];\r\n\t\t\t\tlet position = this.valueToPosition(realValue);\r\n\t\t\t\tif (position - previousPosition >= minDifference * 0.95) {\r\n\t\t\t\t\t$array.move(selectedItems, index);\r\n\t\t\t\t\tpreviousPosition = position;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvalue = $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime();\r\n\t\t\t}\r\n\r\n\t\t\tif (selectedItems.length > 0) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tlet previousValue = -Infinity;\r\n\t\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n\r\n\t\t\t\t$array.each(selectedItems, (index) => {\r\n\t\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\t\t\tif (this.dataItems.length < i + 1) {\r\n\t\t\t\t\t\tdataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\t\t\tthis._dataItems.push(dataItem);\r\n\t\t\t\t\t\tthis.processDataItem(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdataItem = this.dataItems[i];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet value = dates[index];\r\n\t\t\t\t\tlet date = new Date(value);\r\n\r\n\t\t\t\t\tlet endValue = value;\r\n\t\t\t\t\tif (i < selectedItems.length - 1) {\r\n\t\t\t\t\t\tendValue = dates[selectedItems[i + 1]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tendValue += intervalDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.setRaw(\"value\", value);\r\n\t\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\r\n\t\t\t\t\tdataItem.setRaw(\"index\", i);\r\n\r\n\t\t\t\t\tif (index > startIndex - 100 && index < endIndex + 100) {\r\n\r\n\t\t\t\t\t\tlet format = formats[gridInterval.timeUnit];\r\n\r\n\t\t\t\t\t\tformat = formats[gridInterval.timeUnit];\r\n\t\t\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n\t\t\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\r\n\t\t\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\r\n\t\t\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._createAssets(dataItem, []);\r\n\r\n\t\t\t\t\t\tconst label = dataItem.get(\"label\");\r\n\t\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (dataItem.isHidden()) {\r\n\t\t\t\t\t\t\tdataItem.show();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tpreviousValue = value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tif (series.inited) {\r\n\t\t\t\t\tseries._markDirtyAxes();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * A format to used by axis to format its labels.\n\t *\n\t * @readonly\n\t */\n\tdurationFormat: string;\n\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\t//let initialMin: number = min;\n\t\t\t//let initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\t/*\n\t\t\tcausese SO with seconds\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}*/\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivate(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n}\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\tif (this.isDirty(\"inside\")) {\n\t\t\taxis.markDirtySize();\n\t\t}\n\t\t\n\t\tconst opposite = \"opposite\"\n\n\t\tif (this.isDirty(opposite)) {\n\t\t\tconst chart = this.chart;\n\n\t\t\tif (chart) {\n\t\t\t\tconst axisChildren = axis.children;\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t\taxis.removeTag(opposite);\n\t\t\t\t}\n\t\t\t\taxis.markDirtySize();\n\t\t\t}\n\t\t\taxis.ghostLabel._applyThemes();\n\t\t}\t\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\t\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"x\", axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0));\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\taxis.set(\"width\", p100);\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", Math.round(this.positionToCoordinate(position)));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tx0 = Math.max(0, x0);\n\t\t\tx1 = Math.min(w, x1);\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\n\t\tif (this.isDirty(\"inside\")) {\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\"\n\t\tif (this.isDirty(opposite)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\taxis.addTag(opposite);\t\t\t\t\t\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(\"opposite\");\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t\tthumb.set(\"centerX\", p100);\n\t\t\t\t}\n\t\t\t\taxis.markDirtySize();\n\t\t\t}\t\t\t\n\t\t\taxis.ghostLabel._applyThemes();\n\t\t}\n\t\tthumb.setPrivate(\"width\", axis.labelsContainer.width());\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"y\", axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height()));\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlet y = this.positionToCoordinate(position);\n\n\t\t\tgrid.set(\"y\", y);\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ty0 = Math.max(0, y0);\n\t\t\ty1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import { RoundedRectangle, IRoundedRectangleSettings, IRoundedRectanglePrivate } from \"../../../core/render/RoundedRectangle\";\n\n\nexport interface ICandlestickSettings extends IRoundedRectangleSettings {\n\t/**\n\t * @todo review\n\t */\t\n\tlowX0?: number;\n\t/**\n\t * @todo review\n\t */\t\n\tlowY0?: number;\n\t/**\n\t * @todo review\n\t */\t\n\tlowX1?: number;\n\t/**\n\t * @todo review\n\t */\t\n\tlowY1?: number;\n\n\t/**\n\t * @todo review\n\t */\n\thighX0?: number;\n\t/**\n\t * @todo review\n\t */\t\n\thighY0?: number;\n\t/**\n\t * @todo review\n\t */\t\n\thighX1?: number;\n\t/**\n\t * @todo review\n\t */\t\n\thighY1?: number;\n\n\t/**\n\t * @todo review\n\t */\n\torientation?: \"horizontal\" | \"vertical\"\n}\n\nexport interface ICandlestickPrivate extends IRoundedRectanglePrivate {\n}\n\n/**\n * A candle element used in a [[CandlestickSeries]].\n */\nexport class Candlestick extends RoundedRectangle {\n\n\tdeclare public _settings: ICandlestickSettings;\n\tdeclare public _privateSettings: ICandlestickPrivate;\n\n\tpublic static className: string = \"Candlestick\";\n\tpublic static classNames: Array<string> = RoundedRectangle.classNames.concat([Candlestick.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tsuper._draw();\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\n\t\tdisplay.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\n\t\tdisplay.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\t}\n}\n","import { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\t/**\r\n\t * @todo review\r\n\t */\t\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { ColumnSeries, IColumnSeriesPrivate, IColumnSeriesSettings, IColumnSeriesDataItem, IColumnSeriesAxisRange } from \"./ColumnSeries\";\nimport { Candlestick } from \"./Candlestick\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $array from \"../../../core/util/Array\";\n\nexport interface ICandlestickSeriesDataItem extends IColumnSeriesDataItem {\n}\n\nexport interface ICandlestickSeriesSettings extends IColumnSeriesSettings {\n}\n\nexport interface ICandlestickSeriesPrivate extends IColumnSeriesPrivate {\n}\n\nexport interface ICandlestickSeriesAxisRange extends IColumnSeriesAxisRange {\n\n\t/**\n\t * A list of [[Candlestick]] element in series.\n\t *\n\t * @readonly\n\t */\n\tcolumns: ListTemplate<Candlestick>\n\n}\n\n/**\n * Candlestick series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class CandlestickSeries extends ColumnSeries {\n\n\tdeclare public _settings: ICandlestickSeriesSettings;\n\tdeclare public _privateSettings: ICandlestickSeriesPrivate;\n\tdeclare public _dataItemSettings: ICandlestickSeriesDataItem;\n\tdeclare public _axisRangeType: ICandlestickSeriesAxisRange;\n\n\tpublic static className: string = \"CandlestickSeries\";\n\tpublic static classNames: Array<string> = ColumnSeries.classNames.concat([CandlestickSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Candlestick>): Candlestick {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of candles in the series.\n\t *\n\t * `columns.template` can be used to configure candles.\n\t *\n\t * @default new ListTemplate<Candlestick>\n\t */\n\tpublic readonly columns: ListTemplate<Candlestick> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => Candlestick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateGraphics(dataItem, previousDataItem);\n\n\t\tconst xAxis = this.getRaw(\"xAxis\");\n\t\tconst yAxis = this.getRaw(\"yAxis\");\n\t\tconst baseAxis = this.getRaw(\"baseAxis\");\n\n\t\tlet vcy = this.get(\"vcy\", 1);\n\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\tlet lx0: number;\n\t\tlet lx1: number;\n\t\tlet ly0: number;\n\t\tlet ly1: number;\n\n\t\tlet hx0: number;\n\t\tlet hx1: number;\n\t\tlet hy0: number;\n\t\tlet hy1: number;\n\n\t\tlet locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\tlet locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\tlet openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\tlet openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\tlet orientation: \"horizontal\" | \"vertical\";\n\n\t\tif (yAxis === baseAxis) {\n\t\t\tlet open = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\n\t\t\tlet close = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\n\n\t\t\tlx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\n\t\t\thx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\n\n\t\t\thx0 = Math.max(open, close);\n\t\t\tlx0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\tly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\n\t\t\tly1 = ly0;\n\t\t\thy0 = ly0;\n\t\t\thy1 = ly0;\n\n\t\t\torientation = \"horizontal\";\n\t\t}\n\t\telse {\n\t\t\tlet open = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\n\t\t\tlet close = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\n\n\t\t\tly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\n\t\t\thy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\n\n\t\t\thy0 = Math.max(open, close);\n\t\t\tly0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\tlx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\n\t\t\tlx1 = lx0;\n\t\t\thx0 = lx0;\n\t\t\thx1 = lx0;\n\n\t\t\torientation = \"vertical\";\n\t\t}\n\n\t\tthis._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation)\n\t}\n\n\tprotected _updateCandleGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, lx0: number, lx1: number, ly0: number, ly1: number, hx0: number, hx1: number, hy0: number, hy1: number, orientation: \"horizontal\" | \"vertical\") {\n\t\tlet column = dataItem.get(\"graphics\") as Candlestick;\n\n\t\tif (column) {\n\t\t\tlet pl0 = this.getPoint(lx0, ly0);\n\t\t\tlet pl1 = this.getPoint(lx1, ly1);\n\n\t\t\tlet ph0 = this.getPoint(hx0, hy0);\n\t\t\tlet ph1 = this.getPoint(hx1, hy1);\n\n\t\t\tlet x = column.x();\n\t\t\tlet y = column.y();\n\n\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\tcolumn.set(\"orientation\", orientation);\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (column: any) => {\n\t\t\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\t\t\tcolumn.set(\"orientation\", orientation);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Candlestick._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\t/**\n\t * @todo review\n\t */\t\n\tcolumns: ListTemplate<OHLC>\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","import * as m from \"./../../dist/es2015/xy.js\";\nexport const am5xy = m;"],"sourceRoot":""}